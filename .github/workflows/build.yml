# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: build
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: bundabrg-repo
          settings-path: ${{ github.workspace }} # location for the settings.xml file
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_TOKEN # env variable for token in deploy

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Updating Version for Release
        if: startsWith(github.ref,'refs/tags/v')
        run: |
          # Remove v from front
          TAG="${GITHUB_REF##*/}"
          MAVEN_VERSION="${TAG/v/}"

          # Set Maven Version
          mvn -B versions:set -DnewVersion=${MAVEN_VERSION}

      - name: Build with Maven
        run: |
          mkdir -p build/output
          mvn -B package --file pom.xml

      - name: Publish to Maven Repo
        if: (github.ref == 'refs/heads/master' || startsWith(github.ref,'refs/tags/v'))
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}
          MAVEN_USERNAME: github-publisher
          MAVEN_TOKEN: ${{ secrets.MAVEN_TOKEN }}

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
          architecture: 'x64'

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r ./requirements.txt

      - run: mkdocs build

      - name: Deploy to Github Pages
        if: startsWith(github.ref,'refs/tags/v')
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./build/docs

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: documentation
          path: build/docs